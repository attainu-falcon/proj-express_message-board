
    <header class="post-container">
     <button class="back" onclick="back()"><</button>
        <textarea class="post-box" placeholder="post!"></textarea>

        <div class="toolbar">
            <h2 class="topic-heading">â˜… <span class="likes"></span></h2>
            <button class="delete-button" onclick="deletepost()" >delete</button>
            <button class="post-button">post</button>
        </div>
    </header>
    <main class="comments-container">
        <div class="insert-comment-box" contenteditable="true" data-placeholder="Enter comment."></div>
        <!--
     --><button class="send-button">Send</button>
        <ul class="comments-list">
            <!-- <li><div class="comment-box">your comments.</div></li> -->
        </ul>
    </main>
    <script>
        document.querySelector('.post-button').addEventListener('click', function () {
            var post = document.querySelector('.post-box').value;
            var cmnt = document.querySelector('.insert-comment-box').innerText;
            let urlParams = new URLSearchParams(window.location.search)
            let id = urlParams.get('topicid')
            if(post!="")
            {
            fetch('/createpost', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    post,
                    id
                })
            }).then(result => {
                if(result.status==200) {
                    window.location.replace("leaderboard" + window.location.search)
                }
            }).catch(error => console.log(error))}
            else{
                    tinyToast.show("post is blank.!").hide(700)
            }
        })
        document.querySelector('.send-button').addEventListener('click', function () {
            var cmnt = document.querySelector('.insert-comment-box').innerText;
            let urlParams = new URLSearchParams(window.location.search)
            let topicid = urlParams.get('topicid')
            let postid = urlParams.get('postid')
            fetch('/createcomment', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    cmnt,
                    topicid,
                    postid
                })
            })
            // .then(res=>res.text())
            .then(result => renderCommentsCheck(result.status)).catch(error => console.log(error))
        })
        function renderCommentsCheck(status) {
            let urlParams = new URLSearchParams(window.location.search)
            if(status==200 && urlParams.has('postid')) {
                let topicid = urlParams.get('topicid')
                let postid = urlParams.get('postid')
                fetch('/commentlist?topicid='+ topicid + '&postid=' + postid)
                .then(res=>res.json())
                .then(result=>renderComments(result))
                .catch(err=>console.log(err))
                function renderComments(result) {
                    document.querySelector('.comments-list').innerHTML = ''
                    for (const cmnt of result) {
                        let li = document.createElement('li')
                        let div = document.createElement('div')
                        div.className = 'comment-box'
                        div.setAttribute('data-id', cmnt._id)
                        div.innerText = cmnt.content
                        li.appendChild(div)
                        document.querySelector('.comments-list').prepend(li)
                    }
                }
            }
        }

        renderCommentsCheck(200)

        function back() {
            let urlParams = new URLSearchParams(window.location.search)
            // console.log(urlParams.has('post'))
            let id = urlParams.get('topicid')
            window.location.replace('/leaderboard?topicid=' + id + window.location.hash)
        }

        fetch('/getpost' + window.location.search)
            .then(res => res.json()).then(result => renderPost(result)).catch(err => console.log(err))

        function renderPost(result) {
            console.log(result)
            document.querySelector('.post-box').value = result.content
        }

        document.querySelector('.topic-heading').addEventListener('click', function () {
            fetch('/updatelikes' + window.location.search)
            .then(result=> {
                if(result.status==200) {
                    let count = parseInt(document.querySelector('.likes').innerText)
                    document.querySelector('.likes').innerText = count+1
                }
            }).catch(err=>console.log(err))
        })


        fetch('/likes' + window.location.search)
            .then(res=>res.text()).then(result=> renderLikes(result)).catch(err=>console.log(err))

        function renderLikes(result) {
            document.querySelector('.likes').innerText = result
        }


        let urlParams = new URLSearchParams(window.location.search)
        if(!urlParams.has('postid')) {
            document.querySelector('.insert-comment-box').style.display = 'none'
            document.querySelector('.send-button').style.display = 'none'
            document.querySelector('.topic-heading').style.display = 'none'
        } else {
            document.querySelector('.post-button').innerText = 'Edit'
            // document.querySelector('.post-button').style.visibility = 'hidden'
            document.querySelector('.post-box').readOnly = true
        }

        function deletepost(){
            fetch('/deletepost'+ window.location.search)
            .then(res =>res.text())
            .then(function(res){

                if(res==1){

                    let urlParams = new URLSearchParams(window.location.search)

                    let id = urlParams.get('topicid')
                    window.location.replace('/leaderboard?topicid=' + id +window.location.hash )
                }
            })

        }

    </script>
